/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TradeImport } from './routes/trade'
import { Route as DocsImport } from './routes/docs'
import { Route as CreateImport } from './routes/create'
import { Route as IndexImport } from './routes/index'
import { Route as ManageIdImport } from "./routes/manage/$id"
import { Route as ExploreIdImport } from './routes/explore/$id'
import { Route as AssetListIdImport } from './routes/assetList/$id'

// Create/Update Routes

const TradeRoute = TradeImport.update({
  id: '/trade',
  path: '/trade',
  getParentRoute: () => rootRoute,
} as any)

const DocsRoute = DocsImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRoute,
} as any)

const CreateRoute = CreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ManageIdRoute = ManageIdImport.update({
  id: '/manage/$id',
  path: '/manage/$id',
  getParentRoute: () => rootRoute,
} as any)

const ExploreIdRoute = ExploreIdImport.update({
  id: '/explore/$id',
  path: '/explore/$id',
  getParentRoute: () => rootRoute,
} as any)

const AssetListIdRoute = AssetListIdImport.update({
  id: '/assetList/$id',
  path: '/assetList/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateImport
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsImport
      parentRoute: typeof rootRoute
    }
    '/trade': {
      id: '/trade'
      path: '/trade'
      fullPath: '/trade'
      preLoaderRoute: typeof TradeImport
      parentRoute: typeof rootRoute
    }
    '/assetList/$id': {
      id: '/assetList/$id'
      path: '/assetList/$id'
      fullPath: '/assetList/$id'
      preLoaderRoute: typeof AssetListIdImport
      parentRoute: typeof rootRoute
    }
    '/explore/$id': {
      id: '/explore/$id'
      path: '/explore/$id'
      fullPath: '/explore/$id'
      preLoaderRoute: typeof ExploreIdImport
      parentRoute: typeof rootRoute
    }
    '/manage/$id': {
      id: '/manage/$id'
      path: '/manage/$id'
      fullPath: '/manage/$id'
      preLoaderRoute: typeof ManageIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/docs': typeof DocsRoute
  '/trade': typeof TradeRoute
  '/assetList/$id': typeof AssetListIdRoute
  '/explore/$id': typeof ExploreIdRoute
  '/manage/$id': typeof ManageIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/docs': typeof DocsRoute
  '/trade': typeof TradeRoute
  '/assetList/$id': typeof AssetListIdRoute
  '/explore/$id': typeof ExploreIdRoute
  '/manage/$id': typeof ManageIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/docs': typeof DocsRoute
  '/trade': typeof TradeRoute
  '/assetList/$id': typeof AssetListIdRoute
  '/explore/$id': typeof ExploreIdRoute
  '/manage/$id': typeof ManageIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create'
    | '/docs'
    | '/trade'
    | '/assetList/$id'
    | '/explore/$id'
    | '/manage/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create'
    | '/docs'
    | '/trade'
    | '/assetList/$id'
    | '/explore/$id'
    | '/manage/$id'
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/docs'
    | '/trade'
    | '/assetList/$id'
    | '/explore/$id'
    | '/manage/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRoute: typeof CreateRoute
  DocsRoute: typeof DocsRoute
  TradeRoute: typeof TradeRoute
  AssetListIdRoute: typeof AssetListIdRoute
  ExploreIdRoute: typeof ExploreIdRoute
  ManageIdRoute: typeof ManageIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoute: CreateRoute,
  DocsRoute: DocsRoute,
  TradeRoute: TradeRoute,
  AssetListIdRoute: AssetListIdRoute,
  ExploreIdRoute: ExploreIdRoute,
  ManageIdRoute: ManageIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create",
        "/docs",
        "/trade",
        "/assetList/$id",
        "/explore/$id",
        "/manage/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create": {
      "filePath": "create.tsx"
    },
    "/docs": {
      "filePath": "docs.tsx"
    },
    "/trade": {
      "filePath": "trade.tsx"
    },
    "/assetList/$id": {
      "filePath": "assetList/$id.tsx"
    },
    "/explore/$id": {
      "filePath": "explore/$id.tsx"
    },
    "/manage/$id": {
      "filePath": "manage/$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
